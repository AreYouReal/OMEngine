GL_VERTEX_SHADER

#version 300 es

uniform highp mat4 uModelViewM;

uniform highp mat4 uProjectionM;

layout(location = 0) in vec4 aPosition;
layout(location = 1) in vec3 aNormal;

out lowp vec3 normal;

void main( void ) {

	lowp vec3 attenuation = vec3( 1.0, 0.0, 0.01 );

	highp vec3 epos = vec3( uModelViewM * aPosition );
	
    highp float d = length(epos);
    
    gl_PointSize = 4.0 / sqrt(attenuation.x + attenuation.y * d + attenuation.z * d * d);
    
	gl_Position = uProjectionM * vec4( epos, 1.0 );
	
	normal = ( aNormal + 1.0 ) * 0.5;
}


GL_FRAGMENT_SHADER

#version 300 es

precision mediump float;

uniform mediump sampler2D uSamplerDiffuse;

in lowp vec3 normal;

out vec4 fragColor;

void main( void ) {

    fragColor = vec4( normal, 1.0 ) * texture(uSamplerDiffuse, gl_PointCoord);
}
